@page "/helyek"
@using doggo.Models
@using doggo.Services
@inject IApiService ApiService
@inject NavigationManager Navigation

<PageTitle>DogGo - Helyeim</PageTitle>

<div class="container mt-5 pt-5">
    <div class="row">
        <div class="col-12">
            <div class="text-inner p-5 fade-in">
                <div class="text-center mb-4">
                    <i class="fas fa-map-marked-alt fa-3x text-primary mb-3"></i>
                    <h1 class="display-4">Helyeim kezelése</h1>
                    <p class="fs-5">Itt kezelheted a saját helyeidet</p>
                </div>
                
                <div class="d-grid d-md-flex justify-content-md-end mb-4">
                    <button class="btn btn-success btn-lg" @onclick="ShowAddLocationForm">
                        <i class="fas fa-plus me-2"></i>
                        Új hely hozzáadása
                    </button>
                </div>
                
                @if (_showAddForm)
                {
                    <div class="card mb-4">
                        <div class="card-body">
                            <h4 class="card-title">
                                <i class="fas fa-plus me-2"></i>
                                Új hely hozzáadása
                            </h4>
                            
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="location-name" class="form-label">
                                        <i class="fas fa-map-marker-alt me-2"></i>
                                        Hely neve
                                    </label>
                                    <input type="text" 
                                           id="location-name" 
                                           class="form-control" 
                                           @bind="_newLocation.Name"
                                           placeholder="pl. Margitsziget Kutyafuttató" />
                                </div>
                                
                                <div class="col-md-3 mb-3">
                                    <label for="location-lat" class="form-label">
                                        <i class="fas fa-compass me-2"></i>
                                        Szélesség
                                    </label>
                                    <input type="number" 
                                           id="location-lat" 
                                           class="form-control" 
                                           @bind="_newLocation.Latitude"
                                           step="0.000001"
                                           placeholder="47.123456" />
                                </div>
                                
                                <div class="col-md-3 mb-3">
                                    <label for="location-lng" class="form-label">
                                        <i class="fas fa-compass me-2"></i>
                                        Hosszúság
                                    </label>
                                    <input type="number" 
                                           id="location-lng" 
                                           class="form-control" 
                                           @bind="_newLocation.Longitude"
                                           step="0.000001"
                                           placeholder="19.123456" />
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label for="location-description" class="form-label">
                                    <i class="fas fa-edit me-2"></i>
                                    Leírás
                                </label>
                                <textarea id="location-description" 
                                          class="form-control" 
                                          rows="3" 
                                          @bind="_newLocation.Description"
                                          placeholder="Írd le a helyet, mit lehet ott csinálni..."></textarea>
                            </div>
                            
                            <div class="d-flex gap-2">
                                <button class="btn btn-primary" @onclick="SaveNewLocation" disabled="@_isSaving">
                                    @if (_isSaving)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                    }
                                    else
                                    {
                                        <i class="fas fa-save me-2"></i>
                                    }
                                    Mentés
                                </button>
                                <button class="btn btn-secondary" @onclick="CancelAddLocation">
                                    <i class="fas fa-times me-2"></i>
                                    Mégse
                                </button>
                            </div>
                        </div>
                    </div>
                }
                
                @if (_myLocations != null && _myLocations.Any())
                {
                    <div class="row">
                        @foreach (var location in _myLocations)
                        {
                            <div class="col-md-6 col-lg-4 mb-4">
                                <div class="card location-card h-100">
                                    <div class="card-body">
                                        <h5 class="card-title">
                                            <i class="fas fa-map-marker-alt me-2"></i>
                                            @location.Name
                                        </h5>
                                        <p class="card-text">@location.Description</p>
                                        <div class="small text-muted mb-2">
                                            <i class="fas fa-compass me-1"></i>
                                            @location.Latitude, @location.Longitude
                                        </div>
                                        @if (location.AverageRating.HasValue)
                                        {
                                            <div class="mb-3">
                                                <i class="fas fa-star text-warning"></i>
                                                <span>@location.AverageRating</span>
                                            </div>
                                        }
                                        <div class="d-flex gap-2">
                                            <button class="btn btn-outline-primary btn-sm" @onclick="() => EditLocation(location)">
                                                <i class="fas fa-edit"></i>
                                                Szerkesztés
                                            </button>
                                            <button class="btn btn-outline-danger btn-sm" @onclick="() => DeleteLocation(location.Id)">
                                                <i class="fas fa-trash"></i>
                                                Törlés
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else if (_isLoading)
                {
                    <div class="text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Betöltés...</span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="text-center">
                        <i class="fas fa-map-marked-alt fa-5x text-muted mb-3"></i>
                        <p class="fs-4 text-muted">Még nincsenek hozzáadott helyek</p>
                        <p class="fs-6 text-muted">Kattints a "Új hely hozzáadása" gombra az első hely létrehozásához!</p>
                    </div>
                }
                
                <div class="text-center mt-4">
                    <NavLink href="/" class="btn btn-outline-primary">
                        <i class="fas fa-home me-2"></i>
                        Vissza a főoldalra
                    </NavLink>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Location>? _myLocations;
    private Location _newLocation = new();
    private bool _showAddForm = false;
    private bool _isLoading = true;
    private bool _isSaving = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadMyLocations();
    }

    private async Task LoadMyLocations()
    {
        try
        {
            _isLoading = true;
            // TODO: Implement API call to load user's locations
            // _myLocations = await ApiService.GetMyLocationsAsync();
            
            // Mock data for now
            await Task.Delay(1000);
            _myLocations = new List<Location>();
        }
        catch (Exception)
        {
            Navigation.NavigateTo("/bejelentkezes");
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    private void ShowAddLocationForm()
    {
        _showAddForm = true;
        _newLocation = new Location();
        StateHasChanged();
    }

    private void CancelAddLocation()
    {
        _showAddForm = false;
        _newLocation = new Location();
        StateHasChanged();
    }

    private async Task SaveNewLocation()
    {
        if (string.IsNullOrEmpty(_newLocation.Name) || string.IsNullOrEmpty(_newLocation.Description))
        {
            return;
        }

        try
        {
            _isSaving = true;
            StateHasChanged();

            // TODO: Implement API call to save location
            // await ApiService.CreateLocationAsync(_newLocation);

            // Simulate API call
            await Task.Delay(1000);

            _showAddForm = false;
            _newLocation = new Location();
            await LoadMyLocations();
        }
        catch (Exception)
        {
            // Handle error
        }
        finally
        {
            _isSaving = false;
            StateHasChanged();
        }
    }

    private void EditLocation(Location location)
    {
        // TODO: Implement edit functionality
    }

    private async Task DeleteLocation(int locationId)
    {
        try
        {
            // TODO: Implement API call to delete location
            // await ApiService.DeleteLocationAsync(locationId);

            await LoadMyLocations();
        }
        catch (Exception)
        {
            // Handle error
        }
    }
}